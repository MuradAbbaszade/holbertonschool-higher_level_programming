>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [
...     [9, 12, 12],
...     [9, 9, 9]
... ]
>>> print(matrix_divided(matrix, 3))
[[3.0, 4.0, 4.0], [3.0, 3.0, 3.0]]

>>> matrix = [[1, 1, 1], [1, 1, 1]]
>>> print(matrix_divided(matrix, "div"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 1, 1], [1, 1, 1]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1], [1, 1]]
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [["a", "b"], ["a", "b"]]
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 1, 1], [1, 1, 1]]
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[1, 1, 1], [1, 1, 1]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
